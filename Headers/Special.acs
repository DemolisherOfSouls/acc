//**************************************************************************
//**
//** Special.acs
//**
//**************************************************************************

class String;
class Tid;
class Fixed;
class ScriptRef;

const static enum ActionSpecials
{
	//	  1:Polyobj_StartLine
	2 : Polyobj_RotateLeft(int, int, int),
	3 : Polyobj_RotateRight(int, int, int),
	4 : Polyobj_Move(int, int, int, int),
	//	  5:Polyobj_ExplicitLine
	6 : Polyobj_MoveTimes8(int, int, int, int),
	7 : Polyobj_DoorSwing(int, int, int, int),
	8 : Polyobj_DoorSlide(int, int, int, int, int),
	9 : Line_Horizon(),					// only for setting it on a line. Cannot be called!
	10 : Door_Close(2, 3),
	11 : Door_Open(2, 3),
	12 : Door_Raise(3, 4),
	13 : Door_LockedRaise(4, 5),
	14 : Door_Animated(3, 4),
	15 : Autosave(),
	//	 16:Transfer_WallLight
	17 : Thing_Raise(tid),
	18 : StartConversation(1, 2),
	19 : Thing_Stop(tid),
	20 : Floor_LowerByValue(int, int, int),
	21 : Floor_LowerToLowest(int, int),
	22 : Floor_LowerToNearest(int, int),
	23 : Floor_RaiseByValue(int, int, int),
	24 : Floor_RaiseToHighest(int, int),
	25 : Floor_RaiseToNearest(int, int),
	26 : Stairs_BuildDown(int, int, int, int, int),
	27 : Stairs_BuildUp(int, int, int, int, int),
	28 : Floor_RaiseAndCrush(3, 4),
	29 : Pillar_Build(int, int, int),
	30 : Pillar_Open(int, int, int, int),
	31 : Stairs_BuildDownSync(4),
	32 : Stairs_BuildUpSync(4),
	33 : ForceField(),
	34 : ClearForceField(int),
	35 : Floor_RaiseByValueTimes8(3),
	36 : Floor_LowerByValueTimes8(3),
	37 : Floor_MoveToValue(int, int, int, int = 0),
	38 : Ceiling_Waggle(int, int, int, int, int),
	39 : Teleport_ZombieChanger(int, int),
	40 : Ceiling_LowerByValue(int, int, int),
	41 : Ceiling_RaiseByValue(int, int, int),
	42 : Ceiling_CrushAndRaise(3, 4),
	43 : Ceiling_LowerAndCrush(3, 4),
	44 : Ceiling_CrushStop(int),
	45 : Ceiling_CrushRaiseAndStay(3, 4),
	46 : Floor_CrushStop(int),
	47 : Ceiling_MoveToValue(3, 4),
	//	 48:Sector_Attach3dMidtex
	49 : GlassBreak(int = 0),
	//	 50:ExtraFloor_LightOnly
	51 : Sector_SetLink(int, int, int, int),
	52 : Scroll_Wall(5),
	53 : Line_SetTextureOffset(int, int, int, int, int),
	54 : Sector_ChangeFlags(3),
	55 : Line_SetBlocking(3),
	56 : Line_SetTextureScale(5),
	//	 57: Sector_SetPortal
	//	 58: Sector_CopyScroller
	59 : Polyobj_OR_MoveToSpot(3),
	60 : Plat_PerpetualRaise(3),
	61 : Plat_Stop(int),
	62 : Plat_DownWaitUpStay(3),
	63 : Plat_DownByValue(int, int, int, int),
	64 : Plat_UpWaitDownStay(3),
	65 : Plat_UpByValue(int, int, int, int),
	66 : Floor_LowerInstant(3),
	67 : Floor_RaiseInstant(3),
	68 : Floor_MoveToValueTimes8(4),
	69 : Ceiling_MoveToValueTimes8(4),
	70 : Teleport(1, 3),
	71 : Teleport_NoFog(1, 4),
	72 : ThrustThing(2, 4),
	73 : DamageThing(1, 2),
	74 : Teleport_NewMap(2, 3),
	75 : Teleport_EndGame(),
	76 : TeleportOther(int, int, int),
	77 : TeleportGroup(5),
	78 : TeleportInSector(4, 5),
	79 : Thing_SetConversation(2),
	80 : ACS_Execute(1, 5),
	81 : ACS_Suspend(ScriptRef),
	81 : ACS_Suspend(int),
	82 : ACS_Terminate(ScriptRef),
	82 : ACS_Terminate(int),
	83 : ACS_LockedExecute(int, int, int, int, int),
	84 : ACS_ExecuteWithResult(1, 5),
	85 : ACS_LockedExecuteDoor(int, int, int, int, int),
	86 : Polyobj_MoveToSpot(3),
	87 : Polyobj_Stop(int),
	88 : Polyobj_MoveTo(int, int, int, int),
	89 : Polyobj_OR_MoveTo(int, int, int, int),
	90 : Polyobj_OR_RotateLeft(int, int, int),
	91 : Polyobj_OR_RotateRight(int, int, int),
	92 : Polyobj_OR_Move(int, int, int, int),
	93 : Polyobj_OR_MoveTimes8(int, int, int, int),
	94 : Pillar_BuildAndCrush(int, int, int, int, int = 0),
	95 : FloorAndCeiling_LowerByValue(int, int, int),
	96 : FloorAndCeiling_RaiseByValue(int, int, int),
	97 : Ceiling_LowerAndCrushDist(3, 5),
	98 : Sector_SetTranslucent(3, 4),
	99 : Floor_RaiseAndCrushDoom(3, 4),
	//	100:Scroll_Texture_Left
	//	101:Scroll_Texture_Right
	//	102:Scroll_Texture_Up
	//	103:Scroll_Texture_Down

	109:Light_ForceLightning(int),
	110 : Light_RaiseByValue(int, int),
	111 : Light_LowerByValue(int, int),
	112 : Light_ChangeToValue(int, int),
	113 : Light_Fade(3),
	114 : Light_Glow(4),
	115 : Light_Flicker(int, int, int),
	116 : Light_Strobe(5),
	117 : Light_Stop(int),
	//	118:Plane_Copy
	119 : Thing_Damage(int, int, int = 0),
	120 : Radius_Quake(5),
	//	121:Line_SetIdentification

	125 : Thing_Move(2, 3),

	127 : Thing_SetSpecial(5),
	128 : ThrustThingZ(4),
	129 : UsePuzzleItem(),					// only for setting it on a line. Cannot be called!
	130 : Thing_Activate(tid),
	131 : Thing_Deactivate(tid),
	132 : Thing_Remove(tid),
	133 : Thing_Destroy(tid, bool, int),
	134 : Thing_Projectile(5),
	135 : Thing_Spawn(tid, int, int, tid),
	136 : Thing_ProjectileGravity(5),
	137 : Thing_SpawnNoFog(tid, int, int, tid),
	138 : Floor_Waggle(5),
	139 : Thing_SpawnFacing(tid, int, bool = false, tid),
	140 : Sector_ChangeSound(2),

	143 : Player_RemoveItem(2),				// Skulltag Functions
	144 : Player_GiveItem(2),				// Skulltag Functions
	145 : Player_SetTeam(1),				// Skulltag Functions
	152 : Team_Score(2),					// Skulltag Functions
	153 : Team_GivePoints(3),				// Skulltag Functions
	154 : Teleport_NoStop(2, 3),

	157 : SetGlobalFogParameter(2),			// GZDoom only!
	158 : FS_Execute(1, 4),
	159 : Sector_SetPlaneReflection(3),		// GZDoom only!
	//	160:Sector_Set3DFloor
	//	161:Sector_SetContents

	168 : Ceiling_CrushAndRaiseDist(3, 5),
	169 : Generic_Crusher2(5),
	170 : Sector_SetCeilingScale2(3),
	171 : Sector_SetFloorScale2(3),
	172 : Plat_UpNearestWaitDownStay(3),
	173 : NoiseAlert(2),
	174 : SendToCommunicator(4),
	175 : Thing_ProjectileIntercept(5),
	176 : Thing_ChangeTID(tid, tid),
	177 : Thing_Hate(2, 3),
	178 : Thing_ProjectileAimed(4, 5),
	179 : ChangeSkill(int),
	180 : Thing_SetTranslation(2),
	//	181 : Plane_Align,
	182 : Line_Mirror(),					// only for setting it on a line. Cannot be called!
	183 : Line_AlignCeiling(2),
	184 : Line_AlignFloor(2),
	185 : Sector_SetRotation(3),
	186 : Sector_SetCeilingPanning(5),
	187 : Sector_SetFloorPanning(5),
	188 : Sector_SetCeilingScale(5),
	189 : Sector_SetFloorScale(5),
	//	190 : Static_Init,
	191 : SetPlayerProperty(3),
	192 : Ceiling_LowerToHighestFloor(2),
	193 : Ceiling_LowerInstant(3),
	194 : Ceiling_RaiseInstant(3),
	195 : Ceiling_CrushRaiseAndStayA(4, 5),
	196 : Ceiling_CrushAndRaiseA(4, 5),
	197 : Ceiling_CrushAndRaiseSilentA(4, 5),
	198 : Ceiling_RaiseByValueTimes8(3),
	199 : Ceiling_LowerByValueTimes8(3),
	200 : Generic_Floor(5),
	201 : Generic_Ceiling(5),
	202 : Generic_Door(5),
	203 : Generic_Lift(5),
	204 : Generic_Stairs(5),
	205 : Generic_Crusher(5),
	206 : Plat_DownWaitUpStayLip(4, 5),
	207 : Plat_PerpetualRaiseLip(4),
	208 : TranslucentLine(2, 3),
	//	209:Transfer_Heights,
	//	210:Transfer_FloorLight,
	//	211:Transfer_CeilingLight,
	212 : Sector_SetColor(4, 5),
	213 : Sector_SetFade(4),
	214 : Sector_SetDamage(3),
	215 : Teleport_Line(2),					// only for setting it on a line. Cannot be called!
	216 : Sector_SetGravity(3),
	217 : Stairs_BuildUpDoom(5),
	218 : Sector_SetWind(4),
	219 : Sector_SetFriction(2),
	220 : Sector_SetCurrent(4),
	221 : Scroll_Texture_Both(5),
	//	222:Scroll_Texture_Model,
	223 : Scroll_Floor(4),
	224 : Scroll_Ceiling(4),
	//	225:Scroll_Texture_Offsets,
	226 : ACS_ExecuteAlways(1, 5),
	//	227:PointPush_SetForce,
	228 : Plat_RaiseAndStayTx0(2, 3),
	229 : Thing_SetGoal(3, 4),
	230 : Plat_UpByValueStayTx(3),
	231 : Plat_ToggleCeiling(1),
	232 : Light_StrobeDoom(3),
	233 : Light_MinNeighbor(1),
	234 : Light_MaxNeighbor(1),
	235 : Floor_TransferTrigger(1),
	236 : Floor_TransferNumeric(1),
	237 : ChangeCamera(3),
	238 : Floor_RaiseToLowestCeiling(int, int),
	239 : Floor_RaiseByValueTxTy(3),
	240 : Floor_RaiseByTexture(int, int),
	241 : Floor_LowerToLowestTxTy(int, int),
	242 : Floor_LowerToHighest(3, 4),
	243 : Exit_Normal(int),
	244 : Exit_Secret(int),
	245 : Elevator_RaiseToNearest(int, int),
	246 : Elevator_MoveToFloor(int, int),
	247 : Elevator_LowerToNearest(int, int),
	248 : HealThing(1, 2),
	249 : Door_CloseWaitOpen(3, 4),
	250 : Floor_Donut(3),
	251 : FloorAndCeiling_LowerRaise(3, 4),
	252 : Ceiling_RaiseToNearest(2),
	253 : Ceiling_LowerToLowest(2),
	254 : Ceiling_LowerToFloor(2),
	255 : Ceiling_CrushRaiseAndStaySilA(4, 5),

	// internal functions have negative values
	-1 : GetLineUDMFInt(2),
	-2 : GetLineUDMFFixed(2),
	-3 : GetThingUDMFInt(2),
	-4 : GetThingUDMFFixed(2),
	-5 : GetSectorUDMFInt(2),
	-6 : GetSectorUDMFFixed(2),
	-7 : GetSideUDMFInt(3),
	-8 : GetSideUDMFFixed(3),
	-9 : GetActorVelX(tid),
	-10 : GetActorVelY(tid),
	-11 : GetActorVelZ(tid),
	-12 : SetActivator(1, 2),
	-13 : SetActivatorToTarget(1),
	-14 : GetActorViewHeight(tid),
	-15 : GetChar(2),
	-16 : GetAirSupply(1),
	-17 : SetAirSupply(2),
	-18 : SetSkyScrollSpeed(2),
	-19 : GetArmorType(2),
	-20 : SpawnSpotForced(string, tid, tid = 0, int = 0),
	-21 : SpawnSpotFacingForced(string, tid, tid = 0, int = 0),
	-22 : CheckActorProperty(tid, int, int),
	-23 : SetActorVelocity(6),
	-24 : SetUserVariable(tid, string, int),
	-25 : GetUserVariable(tid, string),
	-26 : Radius_Quake2(6),
	-27 : CheckActorClass(tid, string),
	-28 : SetUserArray(4),
	-29 : GetUserArray(3),
	-30 : SoundSequenceOnActor(2),
	-31 : SoundSequenceOnSector(3),
	-32 : SoundSequenceOnPolyobj(2),
	-33 : GetPolyobjX(int),
	-34 : GetPolyobjY(int),
	-35 : CheckSight(3),
	-36 : SpawnForced(4, 6),
	-37 : AnnouncerSound(2),
	-38 : SetPointer(int, tid, int = 0, int = 0),
	-39 : ACS_NamedExecute(ScriptRef),
	-39 : ACS_NamedExecute(int, int = 0, int = 0, int = 0, int = 0),
	-40 : ACS_NamedSuspend(ScriptRef),
	-40 : ACS_NamedSuspend(int),
	-41 : ACS_NamedTerminate(ScriptRef),
	-42 : ACS_NamedLockedExecute(5),
	-43 : ACS_NamedLockedExecuteDoor(5),
	-44 : ACS_NamedExecuteWithResult(ScriptRef),
	-44 : ACS_NamedExecuteWithResult(int, int = 0, int = 0, int = 0, int = 0),
	-45 : ACS_NamedExecuteAlways(1, 5),
	-46 : UniqueTID(tid = 0, int = 0),
	-47 : IsTIDUsed(tid),
	-48 : Sqrt(int),
	-49 : FixedSqrt(fixed),
	-50 : VectorLength(fixed, fixed),
	-51 : SetHUDClipRect(4, 5),
	-52 : SetHUDWrapWidth(1),
	-53 : SetCVar(2),
	-54 : GetUserCVar(2),
	-55 : SetUserCVar(3),
	-56 : GetCVarString(string),
	-57 : SetCVarString(string, string),
	-58 : GetUserCVarString(2),
	-59 : SetUserCVarString(3),
	-60 : LineAttack(tid, fixed, fixed, int, string = "BulletPuff", string = "None", fixed = 2048.0, int = 0),
	-61 : PlaySound(2, 6),
	-62 : StopSound(1, 2),
	-63 : strcmp(2, 3),
	-64 : stricmp(2, 3),
	-64 : strcasecmp(2, 3),	// an alias for stricmp
	-65 : StrLeft(2),
	-66 : StrRight(2),
	-67 : StrMid(3),
	-68 : GetActorClass(tid),
	-69 : GetWeapon(),
	-70 : SoundVolume(3),
	-71 : PlayActorSound(2, 6),
	-72 : SpawnDecal(2, 6),
	-73 : CheckFont(string),
	-74 : DropItem(tid, string, int = -1, int = 256),
	-75 : CheckFlag(tid, string),
	-76 : SetLineActivation(int int),
	-77 : GetLineActivation(int),

	// Zandronum's
	-100 : ResetMap(),
	-101 : PlayerIsSpectator(1),
	-102 : ConsolePlayerNumber(),
	-103 : GetTeamProperty(2),
	-104 : GetPlayerLivesLeft(1),
	-105 : SetPlayerLivesLeft(2),
	-106 : KickFromGame(2),

	// ZDaemon's
	-19260 : GetTeamScore(1),
	-19261 : SetTeamScore(2);

	//-100000 : __EndOfList__(10);
};
